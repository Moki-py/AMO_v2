version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: amo_rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - amo_network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amo_worker
    command: python run_worker.py --host rabbitmq --workers 4
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - MONGO_URL=mongodb://mongodb:27017/amo_db
    networks:
      - amo_network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amo_api
    command: python modern_ui_server.py
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - MONGO_URL=mongodb://mongodb:27017/amo_db
    networks:
      - amo_network

  mongodb:
    image: mongo:latest
    container_name: amo_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - amo_network

  mongo-express:
    image: mongo-express:latest
    container_name: amo_mongo_express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    networks:
      - amo_network

volumes:
  rabbitmq_data:
  mongo_data:

networks:
  amo_network:
    driver: bridge